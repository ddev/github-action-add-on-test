name: "DDEV add-on test"
author: "Julien Loizelet"
description: "A Github Action to run DDEV add-on tests"

inputs:
  ddev_version:
    type: choice
    required: false
    default: "stable"
    description: "DDEV Version to use"
    options:
      - "stable"
      - "HEAD"

  addon_repository:
    description: "Repository of the tested addon"
    required: true

  addon_ref:
    description: "Repository ref of the tested addon"
    required: true

  addon_path:
    description: "Path to clone the addon"
    required: false
    default: "./"

  debug_enabled:
    type: boolean
    description: "Debug with tmate"
    required: false
    default: false

  disable_checkout_action:
    type: boolean
    description: "Disable addon checkout action"
    required: false
    default: false

  token:
    description: "A Github PAT"
    required: true

  test_command:
    description: "Test command to run"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - uses: Homebrew/actions/setup-homebrew@master

    - name: Environment setup
      shell: bash
      run: |
        # For bats-assert and friends
        brew tap bats-core/bats-core >/dev/null
        brew install bats-core bats-file bats-assert bats-support jq mkcert yq >/dev/null
        mkcert -install

    - uses: actions/checkout@v4
      if: inputs.disable_checkout_action == 'false'
      with:
        repository: ${{ inputs.addon_repository }}
        ref: ${{ inputs.addon_ref }}
        path: ${{ inputs.addon_path }}

    - name: Use ddev stable
      shell: bash
      if: inputs.ddev_version == 'stable'
      run: brew install ddev/ddev/ddev >/dev/null

    - name: Use ddev HEAD
      shell: bash
      if: inputs.ddev_version == 'HEAD'
      run: brew install --HEAD ddev/ddev/ddev >/dev/null

    - name: Download docker images
      shell: bash
      run: ddev debug download-images >/dev/null

    - uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
        github-token: ${{ inputs.token }}
      if: inputs.debug_enabled == 'true'

    - name: Run test
      env:
        # Allow ddev get to use a GitHub token to prevent rate limiting by tests
        DDEV_GITHUB_TOKEN: ${{ inputs.token }}
        # Don't try interactive behaviors
        DDEV_NONINTERACTIVE: "true"
        # Don't send telemetry to amplitude
        DDEV_NO_INSTRUMENTATION: "true"
        # Use test_command input if provided
        TEST_COMMAND_INPUT: ${{ inputs.test_command }}
        # Use the addon path
        ADDON_PATH: ${{ inputs.addon_path }}
        # Use the event name
        GITHUB_EVENT_NAME: ${{ github.event_name }}
      shell: bash
      # Use of "set +H" to ensure that bash history expansion is disabled so that ! can be used in test command
      run: |
        set +H
        if [ -n "$TEST_COMMAND_INPUT" ]; then
          TEST_COMMAND="$TEST_COMMAND_INPUT"
        else
          case "$GITHUB_EVENT_NAME" in
            "push"|"pull_request")
              TEST_COMMAND="bats tests --filter-tags !release"
              ;;
            *)
              TEST_COMMAND="bats tests"
              ;;
          esac
        fi
        echo "Running: $TEST_COMMAND in $ADDON_PATH"
        cd $ADDON_PATH && $TEST_COMMAND

branding:
  icon: "code"
  color: "blue"
